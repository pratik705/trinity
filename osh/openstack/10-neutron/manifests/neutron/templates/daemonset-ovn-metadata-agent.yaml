apiVersion: v1
kind: ServiceAccount
metadata:
  name: neutron-ovn-metadata-agent
  namespace: openstack
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: neutron-openstack-neutron-ovn-metadata-agent
  namespace: openstack
rules:
- apiGroups:
  - ''
  - extensions
  - batch
  - apps
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: neutron-neutron-ovn-metadata-agent
  namespace: openstack
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: neutron-openstack-neutron-ovn-metadata-agent
subjects:
- kind: ServiceAccount
  name: neutron-ovn-metadata-agent
  namespace: openstack
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    openstackhelm.openstack.org/release_uuid: ''
  labels:
    application: neutron
    component: ovn-metadata-agent
    release_group: neutron
  name: neutron-ovn-metadata-agent-default
spec:
  minReadySeconds: 0
  selector:
    matchLabels:
      application: neutron
      component: ovn-metadata-agent
      release_group: neutron
  template:
    metadata:
      annotations:
        configmap-bin-hash: 3b17fadc4799090e9f5d65201d90080ae322cff710e2b448a8f9d2c92555a57d
        configmap-etc-hash: ee5a3f66265d9b7d4d194aae45f4045d59ba2439b0933f02e78871c2e61099fa
        openstackhelm.openstack.org/release_uuid: ''
      labels:
        application: neutron
        component: ovn-metadata-agent
        release_group: neutron
    spec:
      containers:
      - command:
        - /tmp/neutron-ovn-metadata-agent.sh
        env:
        - name: RPC_PROBE_TIMEOUT
          value: '60'
        - name: RPC_PROBE_RETRIES
          value: '2'
        image: docker.io/openstackhelm/neutron:2023.1-ubuntu_jammy
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - python
            - /tmp/health-probe.py
            - --config-file
            - /etc/neutron/neutron.conf
            - --config-file
            - /etc/neutron/ovn_metadata_agent.ini
            - --liveness-probe
          initialDelaySeconds: 120
          periodSeconds: 600
          timeoutSeconds: 580
        name: neutron-ovn-metadata-agent
        readinessProbe:
          exec:
            command:
            - python
            - /tmp/health-probe.py
            - --config-file
            - /etc/neutron/neutron.conf
            - --config-file
            - /etc/neutron/ovn_metadata_agent.ini
          initialDelaySeconds: 30
          periodSeconds: 190
          timeoutSeconds: 185
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /run/openvswitch
          name: run-openvswitch
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /var/lib/neutron
          name: pod-var-neutron
        - mountPath: /tmp/neutron-ovn-metadata-agent.sh
          name: neutron-bin
          readOnly: true
          subPath: neutron-ovn-metadata-agent.sh
        - mountPath: /tmp/health-probe.py
          name: neutron-bin
          readOnly: true
          subPath: health-probe.py
        - mountPath: /etc/neutron/neutron.conf
          name: neutron-etc
          readOnly: true
          subPath: neutron.conf
        - mountPath: /etc/neutron/logging.conf
          name: neutron-etc
          readOnly: true
          subPath: logging.conf
        - mountPath: /etc/neutron/plugins/ml2/ml2_conf.ini
          name: neutron-etc
          readOnly: true
          subPath: ml2_conf.ini
        - mountPath: /etc/neutron/ovn_metadata_agent.ini
          name: neutron-etc
          readOnly: true
          subPath: ovn_metadata_agent.ini
        - mountPath: /etc/sudoers.d/kolla_neutron_sudoers
          name: neutron-etc
          readOnly: true
          subPath: neutron_sudoers
        - mountPath: /etc/neutron/rootwrap.conf
          name: neutron-etc
          readOnly: true
          subPath: rootwrap.conf
        - mountPath: /etc/neutron/rootwrap.d/debug.filters
          name: neutron-etc
          readOnly: true
          subPath: debug.filters
        - mountPath: /etc/neutron/rootwrap.d/dhcp.filters
          name: neutron-etc
          readOnly: true
          subPath: dhcp.filters
        - mountPath: /etc/neutron/rootwrap.d/dibbler.filters
          name: neutron-etc
          readOnly: true
          subPath: dibbler.filters
        - mountPath: /etc/neutron/rootwrap.d/ebtables.filters
          name: neutron-etc
          readOnly: true
          subPath: ebtables.filters
        - mountPath: /etc/neutron/rootwrap.d/ipset-firewall.filters
          name: neutron-etc
          readOnly: true
          subPath: ipset-firewall.filters
        - mountPath: /etc/neutron/rootwrap.d/iptables-firewall.filters
          name: neutron-etc
          readOnly: true
          subPath: iptables-firewall.filters
        - mountPath: /etc/neutron/rootwrap.d/l3.filters
          name: neutron-etc
          readOnly: true
          subPath: l3.filters
        - mountPath: /etc/neutron/rootwrap.d/linuxbridge-plugin.filters
          name: neutron-etc
          readOnly: true
          subPath: linuxbridge-plugin.filters
        - mountPath: /etc/neutron/rootwrap.d/netns-cleanup.filters
          name: neutron-etc
          readOnly: true
          subPath: netns-cleanup.filters
        - mountPath: /etc/neutron/rootwrap.d/openvswitch-plugin.filters
          name: neutron-etc
          readOnly: true
          subPath: openvswitch-plugin.filters
        - mountPath: /etc/neutron/rootwrap.d/privsep.filters
          name: neutron-etc
          readOnly: true
          subPath: privsep.filters
        - mountPath: /var/lib/neutron/openstack-helm
          name: socket
        - mountPath: /run/netns
          mountPropagation: Bidirectional
          name: host-run-netns
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      initContainers:
      - command:
        - kubernetes-entrypoint
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INTERFACE_NAME
          value: eth0
        - name: PATH
          value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
        - name: DEPENDENCY_SERVICE
          value: openstack:nova-metadata,openstack:neutron-server
        - name: DEPENDENCY_DAEMONSET
          value: ''
        - name: DEPENDENCY_CONTAINER
          value: ''
        - name: DEPENDENCY_POD_JSON
          value: ''
        - name: DEPENDENCY_CUSTOM_RESOURCE
          value: ''
        image: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
        imagePullPolicy: IfNotPresent
        name: init
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 65534
        volumeMounts: null
      - command:
        - /tmp/neutron-metadata-agent-init.sh
        env:
        - name: NEUTRON_USER_UID
          value: '42424'
        image: docker.io/openstackhelm/neutron:2023.1-ubuntu_jammy
        imagePullPolicy: IfNotPresent
        name: neutron-metadata-agent-init
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /tmp/neutron-metadata-agent-init.sh
          name: neutron-bin
          readOnly: true
          subPath: neutron-metadata-agent-init.sh
        - mountPath: /etc/neutron/neutron.conf
          name: neutron-etc
          readOnly: true
          subPath: neutron.conf
        - mountPath: /var/lib/neutron/openstack-helm
          name: socket
      - command:
        - /tmp/neutron-ovn-init.sh
        image: docker.io/openstackhelm/neutron:2023.1-ubuntu_jammy
        imagePullPolicy: IfNotPresent
        name: ovn-neutron-init
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /tmp/neutron-ovn-init.sh
          name: neutron-bin
          readOnly: true
          subPath: neutron-ovn-init.sh
      nodeSelector:
        openstack-network-node: enabled
      securityContext:
        runAsUser: 42424
      serviceAccountName: neutron-ovn-metadata-agent
      shareProcessNamespace: true
      volumes:
      - emptyDir: {}
        name: pod-tmp
      - emptyDir: {}
        name: pod-var-neutron
      - hostPath:
          path: /run/openvswitch
        name: run-openvswitch
      - configMap:
          defaultMode: 365
          name: neutron-bin
        name: neutron-bin
      - name: neutron-etc
        secret:
          defaultMode: 292
          secretName: neutron-ovn-metadata-agent-default
      - hostPath:
          path: /var/lib/neutron/openstack-helm
        name: socket
      - hostPath:
          path: /run/netns
        name: host-run-netns
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
