---
# Source: horizon/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: horizon
  namespace: openstack
---
# Source: horizon/templates/deployment.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: horizon-openstack-horizon
  namespace: openstack
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
    resources:
      - services
      - endpoints
      - jobs
      - pods
---
# Source: horizon/templates/deployment.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: horizon-horizon
  namespace: openstack
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: horizon-openstack-horizon
subjects:
  - kind: ServiceAccount
    name: horizon
    namespace: openstack
---
# Source: horizon/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: horizon
  annotations:
    "openstackhelm.openstack.org/release_uuid": ""
  labels:
    release_group: horizon
    application: horizon
    component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      release_group: horizon
      application: horizon
      component: server
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 3
  template:
    metadata:
      labels:
        release_group: horizon
        application: horizon
        component: server
      annotations:
        "openstackhelm.openstack.org/release_uuid": ""
        configmap-bin-hash: "7157c400fa67b7302de0b83c1c6c0f01e436ad9cf7ee7c69d81ae09e2e78e6b0"
        configmap-etc-hash: "197a2f5964b707b097978c8e902761ec0bfa1ba469449b3694db7720c28cbd04"
        configmap-logo-hash: "2c1ab2c70a184389df757ce1772016588c9bba5a468d3194168462d6c516457d"
        
    spec:
      serviceAccountName: horizon
      securityContext:
        runAsUser: 42424
      affinity:
        
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: release_group
                    operator: In
                    values:
                    - horizon
                  - key: application
                    operator: In
                    values:
                    - horizon
                  - key: component
                    operator: In
                    values:
                    - server
              topologyKey: kubernetes.io/hostname
            weight: 10
      nodeSelector:
        openstack-control-plane: enabled

      terminationGracePeriodSeconds: 30
      initContainers:
        
        - name: init
          image: "quay.io/airshipit/kubernetes-entrypoint:v1.0.0"
          imagePullPolicy: IfNotPresent  
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65534
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INTERFACE_NAME
              value: eth0
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_SERVICE
              value: "openstack:memcached,openstack:mariadb-galera-primary,openstack:keystone-api"
            - name: DEPENDENCY_JOBS
              value: "horizon-db-sync"
            - name: DEPENDENCY_DAEMONSET
              value: ""
            - name: DEPENDENCY_CONTAINER
              value: ""
            - name: DEPENDENCY_POD_JSON
              value: ""
            - name: DEPENDENCY_CUSTOM_RESOURCE
              value: ""
          command:
            - kubernetes-entrypoint
          volumeMounts:
            null
      containers:
        - name: horizon
          image: "docker.io/openstackhelm/horizon:2023.1-ubuntu_jammy"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsUser: 0
          command:
            - /tmp/horizon.sh
            - start
          env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/horizon.sh
                  - stop
          ports:
            - name: web
              containerPort: 80
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 80
            initialDelaySeconds: 180
            periodSeconds: 60
            timeoutSeconds: 5
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: static-horizon
              mountPath: /var/www/html/
            - name: horizon-bin
              mountPath: /tmp/horizon.sh
              subPath: horizon.sh
              readOnly: true
            - name: horizon-bin
              mountPath: /tmp/manage.py
              subPath: manage.py
              readOnly: true
            - name: horizon-etc
              mountPath: /etc/apache2/sites-available/000-default.conf
              subPath: horizon.conf
              readOnly: true
            - name: horizon-etc
              mountPath: /etc/apache2/conf-available/security.conf
              subPath: security.conf
              readOnly: true
            - name: horizon-bin
              mountPath: /var/www/cgi-bin/horizon/django.wsgi
              subPath: django.wsgi
              readOnly: true
            - name: horizon-etc
              mountPath: /etc/openstack-dashboard/local_settings
              subPath: local_settings
              readOnly: true
            - name: horizon-etc
              mountPath: /etc/openstack-dashboard/ceilometer_policy.yaml
              subPath: ceilometer_policy.yaml
              readOnly: true
            - name: horizon-etc
              mountPath: /etc/openstack-dashboard/heat_policy.yaml
              subPath: heat_policy.yaml
              readOnly: true
            - name: horizon-etc
              mountPath: /etc/openstack-dashboard/ceilometer_policy.json
              subPath: ceilometer_policy.json
              readOnly: true
            - name: horizon-etc
              mountPath: /etc/openstack-dashboard/heat_policy.json
              subPath: heat_policy.json
              readOnly: true
            - name: horizon-logo
              mountPath: /tmp/logo.svg
              subPath: logo.svg
            - name: horizon-logo
              mountPath: /tmp/logo-splash.svg
              subPath: logo-splash.svg
            - name: horizon-logo
              mountPath: /tmp/favicon.ico
              subPath: favicon.ico                        

      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: wsgi-horizon
          emptyDir: {}
        - name: static-horizon
          emptyDir: {}
        - name: horizon-bin
          configMap:
            name: horizon-bin
            defaultMode: 0555
        - name: horizon-etc
          secret:
            secretName: horizon-etc
            defaultMode: 0444
        - name: horizon-logo
          configMap:
            name: horizon-logo
